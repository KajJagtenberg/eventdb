// Code generated by protoc-gen-go. DO NOT EDIT.
// source: api.proto

package api

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type Event struct {
	Id                   string   `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Stream               string   `protobuf:"bytes,2,opt,name=stream,proto3" json:"stream,omitempty"`
	Version              uint32   `protobuf:"varint,3,opt,name=version,proto3" json:"version,omitempty"`
	Type                 string   `protobuf:"bytes,4,opt,name=type,proto3" json:"type,omitempty"`
	Data                 string   `protobuf:"bytes,5,opt,name=data,proto3" json:"data,omitempty"`
	Metadata             string   `protobuf:"bytes,6,opt,name=metadata,proto3" json:"metadata,omitempty"`
	CausationId          string   `protobuf:"bytes,7,opt,name=causation_id,json=causationId,proto3" json:"causation_id,omitempty"`
	CorrelationId        string   `protobuf:"bytes,8,opt,name=correlation_id,json=correlationId,proto3" json:"correlation_id,omitempty"`
	AddedAt              int64    `protobuf:"varint,9,opt,name=added_at,json=addedAt,proto3" json:"added_at,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Event) Reset()         { *m = Event{} }
func (m *Event) String() string { return proto.CompactTextString(m) }
func (*Event) ProtoMessage()    {}
func (*Event) Descriptor() ([]byte, []int) {
	return fileDescriptor_00212fb1f9d3bf1c, []int{0}
}

func (m *Event) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Event.Unmarshal(m, b)
}
func (m *Event) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Event.Marshal(b, m, deterministic)
}
func (m *Event) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Event.Merge(m, src)
}
func (m *Event) XXX_Size() int {
	return xxx_messageInfo_Event.Size(m)
}
func (m *Event) XXX_DiscardUnknown() {
	xxx_messageInfo_Event.DiscardUnknown(m)
}

var xxx_messageInfo_Event proto.InternalMessageInfo

func (m *Event) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *Event) GetStream() string {
	if m != nil {
		return m.Stream
	}
	return ""
}

func (m *Event) GetVersion() uint32 {
	if m != nil {
		return m.Version
	}
	return 0
}

func (m *Event) GetType() string {
	if m != nil {
		return m.Type
	}
	return ""
}

func (m *Event) GetData() string {
	if m != nil {
		return m.Data
	}
	return ""
}

func (m *Event) GetMetadata() string {
	if m != nil {
		return m.Metadata
	}
	return ""
}

func (m *Event) GetCausationId() string {
	if m != nil {
		return m.CausationId
	}
	return ""
}

func (m *Event) GetCorrelationId() string {
	if m != nil {
		return m.CorrelationId
	}
	return ""
}

func (m *Event) GetAddedAt() int64 {
	if m != nil {
		return m.AddedAt
	}
	return 0
}

type AddEventsRequest struct {
	Stream               string                        `protobuf:"bytes,1,opt,name=stream,proto3" json:"stream,omitempty"`
	Version              uint32                        `protobuf:"varint,2,opt,name=version,proto3" json:"version,omitempty"`
	Events               []*AddEventsRequest_EventData `protobuf:"bytes,3,rep,name=events,proto3" json:"events,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                      `json:"-"`
	XXX_unrecognized     []byte                        `json:"-"`
	XXX_sizecache        int32                         `json:"-"`
}

func (m *AddEventsRequest) Reset()         { *m = AddEventsRequest{} }
func (m *AddEventsRequest) String() string { return proto.CompactTextString(m) }
func (*AddEventsRequest) ProtoMessage()    {}
func (*AddEventsRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_00212fb1f9d3bf1c, []int{1}
}

func (m *AddEventsRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AddEventsRequest.Unmarshal(m, b)
}
func (m *AddEventsRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AddEventsRequest.Marshal(b, m, deterministic)
}
func (m *AddEventsRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AddEventsRequest.Merge(m, src)
}
func (m *AddEventsRequest) XXX_Size() int {
	return xxx_messageInfo_AddEventsRequest.Size(m)
}
func (m *AddEventsRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_AddEventsRequest.DiscardUnknown(m)
}

var xxx_messageInfo_AddEventsRequest proto.InternalMessageInfo

func (m *AddEventsRequest) GetStream() string {
	if m != nil {
		return m.Stream
	}
	return ""
}

func (m *AddEventsRequest) GetVersion() uint32 {
	if m != nil {
		return m.Version
	}
	return 0
}

func (m *AddEventsRequest) GetEvents() []*AddEventsRequest_EventData {
	if m != nil {
		return m.Events
	}
	return nil
}

type AddEventsRequest_EventData struct {
	Type                 string   `protobuf:"bytes,1,opt,name=type,proto3" json:"type,omitempty"`
	Data                 string   `protobuf:"bytes,2,opt,name=data,proto3" json:"data,omitempty"`
	Metadata             string   `protobuf:"bytes,3,opt,name=metadata,proto3" json:"metadata,omitempty"`
	CausationId          string   `protobuf:"bytes,4,opt,name=causation_id,json=causationId,proto3" json:"causation_id,omitempty"`
	CorrelationId        string   `protobuf:"bytes,5,opt,name=correlation_id,json=correlationId,proto3" json:"correlation_id,omitempty"`
	AddedAt              int64    `protobuf:"varint,6,opt,name=added_at,json=addedAt,proto3" json:"added_at,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *AddEventsRequest_EventData) Reset()         { *m = AddEventsRequest_EventData{} }
func (m *AddEventsRequest_EventData) String() string { return proto.CompactTextString(m) }
func (*AddEventsRequest_EventData) ProtoMessage()    {}
func (*AddEventsRequest_EventData) Descriptor() ([]byte, []int) {
	return fileDescriptor_00212fb1f9d3bf1c, []int{1, 0}
}

func (m *AddEventsRequest_EventData) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AddEventsRequest_EventData.Unmarshal(m, b)
}
func (m *AddEventsRequest_EventData) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AddEventsRequest_EventData.Marshal(b, m, deterministic)
}
func (m *AddEventsRequest_EventData) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AddEventsRequest_EventData.Merge(m, src)
}
func (m *AddEventsRequest_EventData) XXX_Size() int {
	return xxx_messageInfo_AddEventsRequest_EventData.Size(m)
}
func (m *AddEventsRequest_EventData) XXX_DiscardUnknown() {
	xxx_messageInfo_AddEventsRequest_EventData.DiscardUnknown(m)
}

var xxx_messageInfo_AddEventsRequest_EventData proto.InternalMessageInfo

func (m *AddEventsRequest_EventData) GetType() string {
	if m != nil {
		return m.Type
	}
	return ""
}

func (m *AddEventsRequest_EventData) GetData() string {
	if m != nil {
		return m.Data
	}
	return ""
}

func (m *AddEventsRequest_EventData) GetMetadata() string {
	if m != nil {
		return m.Metadata
	}
	return ""
}

func (m *AddEventsRequest_EventData) GetCausationId() string {
	if m != nil {
		return m.CausationId
	}
	return ""
}

func (m *AddEventsRequest_EventData) GetCorrelationId() string {
	if m != nil {
		return m.CorrelationId
	}
	return ""
}

func (m *AddEventsRequest_EventData) GetAddedAt() int64 {
	if m != nil {
		return m.AddedAt
	}
	return 0
}

type AddEventsResponse struct {
	Events               []*Event `protobuf:"bytes,1,rep,name=events,proto3" json:"events,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *AddEventsResponse) Reset()         { *m = AddEventsResponse{} }
func (m *AddEventsResponse) String() string { return proto.CompactTextString(m) }
func (*AddEventsResponse) ProtoMessage()    {}
func (*AddEventsResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_00212fb1f9d3bf1c, []int{2}
}

func (m *AddEventsResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AddEventsResponse.Unmarshal(m, b)
}
func (m *AddEventsResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AddEventsResponse.Marshal(b, m, deterministic)
}
func (m *AddEventsResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AddEventsResponse.Merge(m, src)
}
func (m *AddEventsResponse) XXX_Size() int {
	return xxx_messageInfo_AddEventsResponse.Size(m)
}
func (m *AddEventsResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_AddEventsResponse.DiscardUnknown(m)
}

var xxx_messageInfo_AddEventsResponse proto.InternalMessageInfo

func (m *AddEventsResponse) GetEvents() []*Event {
	if m != nil {
		return m.Events
	}
	return nil
}

type GetEventsRequest struct {
	Stream               string   `protobuf:"bytes,1,opt,name=stream,proto3" json:"stream,omitempty"`
	Version              uint32   `protobuf:"varint,2,opt,name=version,proto3" json:"version,omitempty"`
	Limit                uint32   `protobuf:"varint,3,opt,name=limit,proto3" json:"limit,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetEventsRequest) Reset()         { *m = GetEventsRequest{} }
func (m *GetEventsRequest) String() string { return proto.CompactTextString(m) }
func (*GetEventsRequest) ProtoMessage()    {}
func (*GetEventsRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_00212fb1f9d3bf1c, []int{3}
}

func (m *GetEventsRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetEventsRequest.Unmarshal(m, b)
}
func (m *GetEventsRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetEventsRequest.Marshal(b, m, deterministic)
}
func (m *GetEventsRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetEventsRequest.Merge(m, src)
}
func (m *GetEventsRequest) XXX_Size() int {
	return xxx_messageInfo_GetEventsRequest.Size(m)
}
func (m *GetEventsRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetEventsRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetEventsRequest proto.InternalMessageInfo

func (m *GetEventsRequest) GetStream() string {
	if m != nil {
		return m.Stream
	}
	return ""
}

func (m *GetEventsRequest) GetVersion() uint32 {
	if m != nil {
		return m.Version
	}
	return 0
}

func (m *GetEventsRequest) GetLimit() uint32 {
	if m != nil {
		return m.Limit
	}
	return 0
}

type GetEventsResponse struct {
	Events               []*Event `protobuf:"bytes,1,rep,name=events,proto3" json:"events,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetEventsResponse) Reset()         { *m = GetEventsResponse{} }
func (m *GetEventsResponse) String() string { return proto.CompactTextString(m) }
func (*GetEventsResponse) ProtoMessage()    {}
func (*GetEventsResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_00212fb1f9d3bf1c, []int{4}
}

func (m *GetEventsResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetEventsResponse.Unmarshal(m, b)
}
func (m *GetEventsResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetEventsResponse.Marshal(b, m, deterministic)
}
func (m *GetEventsResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetEventsResponse.Merge(m, src)
}
func (m *GetEventsResponse) XXX_Size() int {
	return xxx_messageInfo_GetEventsResponse.Size(m)
}
func (m *GetEventsResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_GetEventsResponse.DiscardUnknown(m)
}

var xxx_messageInfo_GetEventsResponse proto.InternalMessageInfo

func (m *GetEventsResponse) GetEvents() []*Event {
	if m != nil {
		return m.Events
	}
	return nil
}

type LogEventsRequest struct {
	Offset               string   `protobuf:"bytes,1,opt,name=offset,proto3" json:"offset,omitempty"`
	Limit                uint32   `protobuf:"varint,2,opt,name=limit,proto3" json:"limit,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *LogEventsRequest) Reset()         { *m = LogEventsRequest{} }
func (m *LogEventsRequest) String() string { return proto.CompactTextString(m) }
func (*LogEventsRequest) ProtoMessage()    {}
func (*LogEventsRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_00212fb1f9d3bf1c, []int{5}
}

func (m *LogEventsRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_LogEventsRequest.Unmarshal(m, b)
}
func (m *LogEventsRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_LogEventsRequest.Marshal(b, m, deterministic)
}
func (m *LogEventsRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_LogEventsRequest.Merge(m, src)
}
func (m *LogEventsRequest) XXX_Size() int {
	return xxx_messageInfo_LogEventsRequest.Size(m)
}
func (m *LogEventsRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_LogEventsRequest.DiscardUnknown(m)
}

var xxx_messageInfo_LogEventsRequest proto.InternalMessageInfo

func (m *LogEventsRequest) GetOffset() string {
	if m != nil {
		return m.Offset
	}
	return ""
}

func (m *LogEventsRequest) GetLimit() uint32 {
	if m != nil {
		return m.Limit
	}
	return 0
}

type LogEventsResponse struct {
	Events               []*Event `protobuf:"bytes,1,rep,name=events,proto3" json:"events,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *LogEventsResponse) Reset()         { *m = LogEventsResponse{} }
func (m *LogEventsResponse) String() string { return proto.CompactTextString(m) }
func (*LogEventsResponse) ProtoMessage()    {}
func (*LogEventsResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_00212fb1f9d3bf1c, []int{6}
}

func (m *LogEventsResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_LogEventsResponse.Unmarshal(m, b)
}
func (m *LogEventsResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_LogEventsResponse.Marshal(b, m, deterministic)
}
func (m *LogEventsResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_LogEventsResponse.Merge(m, src)
}
func (m *LogEventsResponse) XXX_Size() int {
	return xxx_messageInfo_LogEventsResponse.Size(m)
}
func (m *LogEventsResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_LogEventsResponse.DiscardUnknown(m)
}

var xxx_messageInfo_LogEventsResponse proto.InternalMessageInfo

func (m *LogEventsResponse) GetEvents() []*Event {
	if m != nil {
		return m.Events
	}
	return nil
}

type StreamCountRequest struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *StreamCountRequest) Reset()         { *m = StreamCountRequest{} }
func (m *StreamCountRequest) String() string { return proto.CompactTextString(m) }
func (*StreamCountRequest) ProtoMessage()    {}
func (*StreamCountRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_00212fb1f9d3bf1c, []int{7}
}

func (m *StreamCountRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_StreamCountRequest.Unmarshal(m, b)
}
func (m *StreamCountRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_StreamCountRequest.Marshal(b, m, deterministic)
}
func (m *StreamCountRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_StreamCountRequest.Merge(m, src)
}
func (m *StreamCountRequest) XXX_Size() int {
	return xxx_messageInfo_StreamCountRequest.Size(m)
}
func (m *StreamCountRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_StreamCountRequest.DiscardUnknown(m)
}

var xxx_messageInfo_StreamCountRequest proto.InternalMessageInfo

type StreamCountResponse struct {
	Count                int64    `protobuf:"varint,1,opt,name=count,proto3" json:"count,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *StreamCountResponse) Reset()         { *m = StreamCountResponse{} }
func (m *StreamCountResponse) String() string { return proto.CompactTextString(m) }
func (*StreamCountResponse) ProtoMessage()    {}
func (*StreamCountResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_00212fb1f9d3bf1c, []int{8}
}

func (m *StreamCountResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_StreamCountResponse.Unmarshal(m, b)
}
func (m *StreamCountResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_StreamCountResponse.Marshal(b, m, deterministic)
}
func (m *StreamCountResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_StreamCountResponse.Merge(m, src)
}
func (m *StreamCountResponse) XXX_Size() int {
	return xxx_messageInfo_StreamCountResponse.Size(m)
}
func (m *StreamCountResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_StreamCountResponse.DiscardUnknown(m)
}

var xxx_messageInfo_StreamCountResponse proto.InternalMessageInfo

func (m *StreamCountResponse) GetCount() int64 {
	if m != nil {
		return m.Count
	}
	return 0
}

type EventCountRequest struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *EventCountRequest) Reset()         { *m = EventCountRequest{} }
func (m *EventCountRequest) String() string { return proto.CompactTextString(m) }
func (*EventCountRequest) ProtoMessage()    {}
func (*EventCountRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_00212fb1f9d3bf1c, []int{9}
}

func (m *EventCountRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_EventCountRequest.Unmarshal(m, b)
}
func (m *EventCountRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_EventCountRequest.Marshal(b, m, deterministic)
}
func (m *EventCountRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_EventCountRequest.Merge(m, src)
}
func (m *EventCountRequest) XXX_Size() int {
	return xxx_messageInfo_EventCountRequest.Size(m)
}
func (m *EventCountRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_EventCountRequest.DiscardUnknown(m)
}

var xxx_messageInfo_EventCountRequest proto.InternalMessageInfo

type EventCountResponse struct {
	Count                int64    `protobuf:"varint,1,opt,name=count,proto3" json:"count,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *EventCountResponse) Reset()         { *m = EventCountResponse{} }
func (m *EventCountResponse) String() string { return proto.CompactTextString(m) }
func (*EventCountResponse) ProtoMessage()    {}
func (*EventCountResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_00212fb1f9d3bf1c, []int{10}
}

func (m *EventCountResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_EventCountResponse.Unmarshal(m, b)
}
func (m *EventCountResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_EventCountResponse.Marshal(b, m, deterministic)
}
func (m *EventCountResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_EventCountResponse.Merge(m, src)
}
func (m *EventCountResponse) XXX_Size() int {
	return xxx_messageInfo_EventCountResponse.Size(m)
}
func (m *EventCountResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_EventCountResponse.DiscardUnknown(m)
}

var xxx_messageInfo_EventCountResponse proto.InternalMessageInfo

func (m *EventCountResponse) GetCount() int64 {
	if m != nil {
		return m.Count
	}
	return 0
}

type StreamCountEstimateRequest struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *StreamCountEstimateRequest) Reset()         { *m = StreamCountEstimateRequest{} }
func (m *StreamCountEstimateRequest) String() string { return proto.CompactTextString(m) }
func (*StreamCountEstimateRequest) ProtoMessage()    {}
func (*StreamCountEstimateRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_00212fb1f9d3bf1c, []int{11}
}

func (m *StreamCountEstimateRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_StreamCountEstimateRequest.Unmarshal(m, b)
}
func (m *StreamCountEstimateRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_StreamCountEstimateRequest.Marshal(b, m, deterministic)
}
func (m *StreamCountEstimateRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_StreamCountEstimateRequest.Merge(m, src)
}
func (m *StreamCountEstimateRequest) XXX_Size() int {
	return xxx_messageInfo_StreamCountEstimateRequest.Size(m)
}
func (m *StreamCountEstimateRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_StreamCountEstimateRequest.DiscardUnknown(m)
}

var xxx_messageInfo_StreamCountEstimateRequest proto.InternalMessageInfo

type StreamCountEstimateResponse struct {
	Count                int64    `protobuf:"varint,1,opt,name=count,proto3" json:"count,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *StreamCountEstimateResponse) Reset()         { *m = StreamCountEstimateResponse{} }
func (m *StreamCountEstimateResponse) String() string { return proto.CompactTextString(m) }
func (*StreamCountEstimateResponse) ProtoMessage()    {}
func (*StreamCountEstimateResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_00212fb1f9d3bf1c, []int{12}
}

func (m *StreamCountEstimateResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_StreamCountEstimateResponse.Unmarshal(m, b)
}
func (m *StreamCountEstimateResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_StreamCountEstimateResponse.Marshal(b, m, deterministic)
}
func (m *StreamCountEstimateResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_StreamCountEstimateResponse.Merge(m, src)
}
func (m *StreamCountEstimateResponse) XXX_Size() int {
	return xxx_messageInfo_StreamCountEstimateResponse.Size(m)
}
func (m *StreamCountEstimateResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_StreamCountEstimateResponse.DiscardUnknown(m)
}

var xxx_messageInfo_StreamCountEstimateResponse proto.InternalMessageInfo

func (m *StreamCountEstimateResponse) GetCount() int64 {
	if m != nil {
		return m.Count
	}
	return 0
}

type EventCountEstimateRequest struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *EventCountEstimateRequest) Reset()         { *m = EventCountEstimateRequest{} }
func (m *EventCountEstimateRequest) String() string { return proto.CompactTextString(m) }
func (*EventCountEstimateRequest) ProtoMessage()    {}
func (*EventCountEstimateRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_00212fb1f9d3bf1c, []int{13}
}

func (m *EventCountEstimateRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_EventCountEstimateRequest.Unmarshal(m, b)
}
func (m *EventCountEstimateRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_EventCountEstimateRequest.Marshal(b, m, deterministic)
}
func (m *EventCountEstimateRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_EventCountEstimateRequest.Merge(m, src)
}
func (m *EventCountEstimateRequest) XXX_Size() int {
	return xxx_messageInfo_EventCountEstimateRequest.Size(m)
}
func (m *EventCountEstimateRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_EventCountEstimateRequest.DiscardUnknown(m)
}

var xxx_messageInfo_EventCountEstimateRequest proto.InternalMessageInfo

type EventCountEstimateResponse struct {
	Count                int64    `protobuf:"varint,1,opt,name=count,proto3" json:"count,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *EventCountEstimateResponse) Reset()         { *m = EventCountEstimateResponse{} }
func (m *EventCountEstimateResponse) String() string { return proto.CompactTextString(m) }
func (*EventCountEstimateResponse) ProtoMessage()    {}
func (*EventCountEstimateResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_00212fb1f9d3bf1c, []int{14}
}

func (m *EventCountEstimateResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_EventCountEstimateResponse.Unmarshal(m, b)
}
func (m *EventCountEstimateResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_EventCountEstimateResponse.Marshal(b, m, deterministic)
}
func (m *EventCountEstimateResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_EventCountEstimateResponse.Merge(m, src)
}
func (m *EventCountEstimateResponse) XXX_Size() int {
	return xxx_messageInfo_EventCountEstimateResponse.Size(m)
}
func (m *EventCountEstimateResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_EventCountEstimateResponse.DiscardUnknown(m)
}

var xxx_messageInfo_EventCountEstimateResponse proto.InternalMessageInfo

func (m *EventCountEstimateResponse) GetCount() int64 {
	if m != nil {
		return m.Count
	}
	return 0
}

type ShellRequest struct {
	Body                 string   `protobuf:"bytes,1,opt,name=body,proto3" json:"body,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ShellRequest) Reset()         { *m = ShellRequest{} }
func (m *ShellRequest) String() string { return proto.CompactTextString(m) }
func (*ShellRequest) ProtoMessage()    {}
func (*ShellRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_00212fb1f9d3bf1c, []int{15}
}

func (m *ShellRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ShellRequest.Unmarshal(m, b)
}
func (m *ShellRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ShellRequest.Marshal(b, m, deterministic)
}
func (m *ShellRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ShellRequest.Merge(m, src)
}
func (m *ShellRequest) XXX_Size() int {
	return xxx_messageInfo_ShellRequest.Size(m)
}
func (m *ShellRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ShellRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ShellRequest proto.InternalMessageInfo

func (m *ShellRequest) GetBody() string {
	if m != nil {
		return m.Body
	}
	return ""
}

type ShellResponse struct {
	Body                 string   `protobuf:"bytes,1,opt,name=body,proto3" json:"body,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ShellResponse) Reset()         { *m = ShellResponse{} }
func (m *ShellResponse) String() string { return proto.CompactTextString(m) }
func (*ShellResponse) ProtoMessage()    {}
func (*ShellResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_00212fb1f9d3bf1c, []int{16}
}

func (m *ShellResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ShellResponse.Unmarshal(m, b)
}
func (m *ShellResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ShellResponse.Marshal(b, m, deterministic)
}
func (m *ShellResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ShellResponse.Merge(m, src)
}
func (m *ShellResponse) XXX_Size() int {
	return xxx_messageInfo_ShellResponse.Size(m)
}
func (m *ShellResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ShellResponse.DiscardUnknown(m)
}

var xxx_messageInfo_ShellResponse proto.InternalMessageInfo

func (m *ShellResponse) GetBody() string {
	if m != nil {
		return m.Body
	}
	return ""
}

func init() {
	proto.RegisterType((*Event)(nil), "api.Event")
	proto.RegisterType((*AddEventsRequest)(nil), "api.AddEventsRequest")
	proto.RegisterType((*AddEventsRequest_EventData)(nil), "api.AddEventsRequest.EventData")
	proto.RegisterType((*AddEventsResponse)(nil), "api.AddEventsResponse")
	proto.RegisterType((*GetEventsRequest)(nil), "api.GetEventsRequest")
	proto.RegisterType((*GetEventsResponse)(nil), "api.GetEventsResponse")
	proto.RegisterType((*LogEventsRequest)(nil), "api.LogEventsRequest")
	proto.RegisterType((*LogEventsResponse)(nil), "api.LogEventsResponse")
	proto.RegisterType((*StreamCountRequest)(nil), "api.StreamCountRequest")
	proto.RegisterType((*StreamCountResponse)(nil), "api.StreamCountResponse")
	proto.RegisterType((*EventCountRequest)(nil), "api.EventCountRequest")
	proto.RegisterType((*EventCountResponse)(nil), "api.EventCountResponse")
	proto.RegisterType((*StreamCountEstimateRequest)(nil), "api.StreamCountEstimateRequest")
	proto.RegisterType((*StreamCountEstimateResponse)(nil), "api.StreamCountEstimateResponse")
	proto.RegisterType((*EventCountEstimateRequest)(nil), "api.EventCountEstimateRequest")
	proto.RegisterType((*EventCountEstimateResponse)(nil), "api.EventCountEstimateResponse")
	proto.RegisterType((*ShellRequest)(nil), "api.ShellRequest")
	proto.RegisterType((*ShellResponse)(nil), "api.ShellResponse")
}

func init() { proto.RegisterFile("api.proto", fileDescriptor_00212fb1f9d3bf1c) }

var fileDescriptor_00212fb1f9d3bf1c = []byte{
	// 628 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xa4, 0x55, 0x4d, 0x6f, 0xda, 0x40,
	0x10, 0x8d, 0x6d, 0x0c, 0x61, 0x08, 0x11, 0x4c, 0x28, 0x71, 0x9c, 0xaa, 0x50, 0x57, 0x95, 0x50,
	0x2b, 0xa1, 0x8a, 0x48, 0xcd, 0xa5, 0x52, 0x9b, 0xb4, 0xb4, 0x8a, 0xd4, 0x93, 0x39, 0x54, 0xe2,
	0x12, 0x6d, 0xd8, 0x4d, 0x6b, 0x09, 0x30, 0xb5, 0x17, 0xd4, 0x9c, 0xfb, 0x97, 0xf2, 0xcb, 0xfa,
	0x0b, 0x2a, 0xaf, 0xd7, 0x8b, 0x3f, 0x80, 0x34, 0xea, 0x6d, 0xe7, 0xed, 0xcc, 0x9b, 0x99, 0xb7,
	0xcf, 0x32, 0x54, 0xc9, 0xc2, 0xeb, 0x2f, 0x02, 0x9f, 0xfb, 0x68, 0x90, 0x85, 0xe7, 0xfc, 0xd1,
	0xc0, 0x1c, 0xae, 0xd8, 0x9c, 0xe3, 0x21, 0xe8, 0x1e, 0xb5, 0xb4, 0xae, 0xd6, 0xab, 0xba, 0xba,
	0x47, 0xb1, 0x0d, 0xe5, 0x90, 0x07, 0x8c, 0xcc, 0x2c, 0x5d, 0x60, 0x32, 0x42, 0x0b, 0x2a, 0x2b,
	0x16, 0x84, 0x9e, 0x3f, 0xb7, 0x8c, 0xae, 0xd6, 0xab, 0xbb, 0x49, 0x88, 0x08, 0x25, 0x7e, 0xb7,
	0x60, 0x56, 0x49, 0xe4, 0x8b, 0x73, 0x84, 0x51, 0xc2, 0x89, 0x65, 0xc6, 0x58, 0x74, 0x46, 0x1b,
	0xf6, 0x67, 0x8c, 0x13, 0x81, 0x97, 0x05, 0xae, 0x62, 0x7c, 0x0e, 0x07, 0x13, 0xb2, 0x0c, 0x09,
	0xf7, 0xfc, 0xf9, 0xb5, 0x47, 0xad, 0x8a, 0xb8, 0xaf, 0x29, 0xec, 0x8a, 0xe2, 0x4b, 0x38, 0x9c,
	0xf8, 0x41, 0xc0, 0xa6, 0x2a, 0x69, 0x5f, 0x24, 0xd5, 0x53, 0xe8, 0x15, 0xc5, 0x13, 0xd8, 0x27,
	0x94, 0x32, 0x7a, 0x4d, 0xb8, 0x55, 0xed, 0x6a, 0x3d, 0xc3, 0xad, 0x88, 0xf8, 0x82, 0x3b, 0xf7,
	0x3a, 0x34, 0x2e, 0x28, 0x15, 0x7b, 0x87, 0x2e, 0xfb, 0xb9, 0x64, 0x21, 0x4f, 0xed, 0xab, 0x6d,
	0xdb, 0x57, 0xcf, 0xee, 0x7b, 0x0e, 0x65, 0x26, 0x28, 0x2c, 0xa3, 0x6b, 0xf4, 0x6a, 0x83, 0x4e,
	0x3f, 0x12, 0x37, 0x4f, 0xdc, 0x17, 0xd1, 0x27, 0xc2, 0x89, 0x2b, 0xd3, 0xed, 0x7b, 0x0d, 0xaa,
	0x0a, 0x55, 0xb2, 0x69, 0x1b, 0x64, 0xd3, 0xb7, 0xc8, 0x66, 0x3c, 0x20, 0x5b, 0xe9, 0x5f, 0x64,
	0x33, 0x1f, 0x92, 0xad, 0x9c, 0x95, 0xed, 0x1c, 0x9a, 0xa9, 0xe5, 0xc2, 0x85, 0x3f, 0x0f, 0x19,
	0x3a, 0x4a, 0x04, 0x4d, 0x88, 0x00, 0x42, 0x04, 0x91, 0x94, 0xec, 0xeb, 0x8c, 0xa1, 0xf1, 0x85,
	0xf1, 0xff, 0x95, 0xbb, 0x05, 0xe6, 0xd4, 0x9b, 0x79, 0x5c, 0xda, 0x2e, 0x0e, 0xa2, 0xa1, 0x52,
	0xdc, 0x8f, 0x18, 0xea, 0x03, 0x34, 0xbe, 0xfa, 0xdf, 0x0b, 0x43, 0xf9, 0xb7, 0xb7, 0x21, 0xe3,
	0xc9, 0x50, 0x71, 0xb4, 0x6e, 0xad, 0xe7, 0x5a, 0xa7, 0x18, 0x1e, 0xd1, 0xba, 0x05, 0x38, 0x12,
	0xdb, 0x7e, 0xf4, 0x97, 0x73, 0x2e, 0x9b, 0x3b, 0xaf, 0xe1, 0x28, 0x83, 0x4a, 0xc2, 0x16, 0x98,
	0x93, 0x08, 0x10, 0x23, 0x19, 0x6e, 0x1c, 0x38, 0x47, 0xd0, 0x14, 0x9c, 0x19, 0x86, 0x57, 0x80,
	0x69, 0x70, 0x27, 0xc1, 0x53, 0xb0, 0x53, 0xdd, 0x86, 0x21, 0xf7, 0x66, 0x84, 0xb3, 0x84, 0xe9,
	0x0c, 0x4e, 0x37, 0xde, 0xee, 0xa4, 0x3c, 0x85, 0x93, 0x75, 0xfb, 0x3c, 0xe3, 0x00, 0xec, 0x4d,
	0x97, 0x3b, 0x09, 0x1d, 0x38, 0x18, 0xfd, 0x60, 0xd3, 0x69, 0xf2, 0x3c, 0x08, 0xa5, 0x1b, 0x9f,
	0xde, 0x25, 0x5f, 0x4a, 0x74, 0x76, 0x5e, 0x40, 0x5d, 0xe6, 0x48, 0xaa, 0x0d, 0x49, 0x83, 0xdf,
	0x25, 0xa8, 0xc7, 0xfb, 0x8c, 0x58, 0xb0, 0xf2, 0x26, 0x0c, 0xdf, 0x41, 0x55, 0x79, 0x19, 0x9f,
	0x6c, 0xfc, 0x70, 0xed, 0x76, 0x1e, 0x8e, 0x3b, 0x38, 0x7b, 0x51, 0xb5, 0x32, 0x9d, 0xac, 0xce,
	0x1b, 0x5c, 0x56, 0x17, 0xbc, 0x19, 0x57, 0x2b, 0xdf, 0xc8, 0xea, 0xbc, 0x13, 0x65, 0x75, 0xc1,
	0x5e, 0xce, 0x1e, 0x5e, 0x42, 0x2d, 0xf5, 0x34, 0x78, 0x2c, 0x12, 0x8b, 0x76, 0xb2, 0xad, 0xe2,
	0x85, 0xe2, 0x78, 0x0f, 0xb0, 0x7e, 0x0c, 0x6c, 0xaf, 0x2d, 0x9a, 0x61, 0x38, 0x2e, 0xe0, 0x8a,
	0x60, 0x9c, 0xf1, 0x6a, 0xf2, 0x9c, 0xd8, 0xc9, 0xf7, 0xcc, 0xb9, 0xc0, 0xee, 0x6e, 0x4f, 0x50,
	0xdc, 0xdf, 0xd2, 0x2e, 0x56, 0xd4, 0xcf, 0x72, 0xc3, 0xe4, 0x99, 0x3b, 0x5b, 0xef, 0x13, 0xe2,
	0xc1, 0x67, 0x69, 0xa7, 0xc4, 0x03, 0x6f, 0xa1, 0x32, 0xfc, 0xc5, 0x26, 0x4b, 0xce, 0xb0, 0x19,
	0xcf, 0x95, 0x32, 0x9b, 0x8d, 0x69, 0x28, 0xe1, 0xe8, 0x69, 0x6f, 0xb4, 0x4b, 0x73, 0x1c, 0xfd,
	0x3a, 0x6f, 0xca, 0xe2, 0x37, 0x7a, 0xf6, 0x37, 0x00, 0x00, 0xff, 0xff, 0xab, 0xbd, 0x2b, 0x92,
	0x53, 0x07, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// StreamServiceClient is the client API for StreamService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type StreamServiceClient interface {
	AddEvents(ctx context.Context, in *AddEventsRequest, opts ...grpc.CallOption) (*AddEventsResponse, error)
	GetEvents(ctx context.Context, in *GetEventsRequest, opts ...grpc.CallOption) (*GetEventsResponse, error)
	LogEvents(ctx context.Context, in *LogEventsRequest, opts ...grpc.CallOption) (*LogEventsResponse, error)
	StreamCount(ctx context.Context, in *StreamCountRequest, opts ...grpc.CallOption) (*StreamCountResponse, error)
	EventCount(ctx context.Context, in *EventCountRequest, opts ...grpc.CallOption) (*EventCountResponse, error)
	StreamCountEstimate(ctx context.Context, in *StreamCountEstimateRequest, opts ...grpc.CallOption) (*StreamCountEstimateResponse, error)
	EventCountEstimate(ctx context.Context, in *EventCountEstimateRequest, opts ...grpc.CallOption) (*EventCountEstimateResponse, error)
}

type streamServiceClient struct {
	cc *grpc.ClientConn
}

func NewStreamServiceClient(cc *grpc.ClientConn) StreamServiceClient {
	return &streamServiceClient{cc}
}

func (c *streamServiceClient) AddEvents(ctx context.Context, in *AddEventsRequest, opts ...grpc.CallOption) (*AddEventsResponse, error) {
	out := new(AddEventsResponse)
	err := c.cc.Invoke(ctx, "/api.StreamService/AddEvents", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *streamServiceClient) GetEvents(ctx context.Context, in *GetEventsRequest, opts ...grpc.CallOption) (*GetEventsResponse, error) {
	out := new(GetEventsResponse)
	err := c.cc.Invoke(ctx, "/api.StreamService/GetEvents", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *streamServiceClient) LogEvents(ctx context.Context, in *LogEventsRequest, opts ...grpc.CallOption) (*LogEventsResponse, error) {
	out := new(LogEventsResponse)
	err := c.cc.Invoke(ctx, "/api.StreamService/LogEvents", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *streamServiceClient) StreamCount(ctx context.Context, in *StreamCountRequest, opts ...grpc.CallOption) (*StreamCountResponse, error) {
	out := new(StreamCountResponse)
	err := c.cc.Invoke(ctx, "/api.StreamService/StreamCount", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *streamServiceClient) EventCount(ctx context.Context, in *EventCountRequest, opts ...grpc.CallOption) (*EventCountResponse, error) {
	out := new(EventCountResponse)
	err := c.cc.Invoke(ctx, "/api.StreamService/EventCount", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *streamServiceClient) StreamCountEstimate(ctx context.Context, in *StreamCountEstimateRequest, opts ...grpc.CallOption) (*StreamCountEstimateResponse, error) {
	out := new(StreamCountEstimateResponse)
	err := c.cc.Invoke(ctx, "/api.StreamService/StreamCountEstimate", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *streamServiceClient) EventCountEstimate(ctx context.Context, in *EventCountEstimateRequest, opts ...grpc.CallOption) (*EventCountEstimateResponse, error) {
	out := new(EventCountEstimateResponse)
	err := c.cc.Invoke(ctx, "/api.StreamService/EventCountEstimate", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// StreamServiceServer is the server API for StreamService service.
type StreamServiceServer interface {
	AddEvents(context.Context, *AddEventsRequest) (*AddEventsResponse, error)
	GetEvents(context.Context, *GetEventsRequest) (*GetEventsResponse, error)
	LogEvents(context.Context, *LogEventsRequest) (*LogEventsResponse, error)
	StreamCount(context.Context, *StreamCountRequest) (*StreamCountResponse, error)
	EventCount(context.Context, *EventCountRequest) (*EventCountResponse, error)
	StreamCountEstimate(context.Context, *StreamCountEstimateRequest) (*StreamCountEstimateResponse, error)
	EventCountEstimate(context.Context, *EventCountEstimateRequest) (*EventCountEstimateResponse, error)
}

// UnimplementedStreamServiceServer can be embedded to have forward compatible implementations.
type UnimplementedStreamServiceServer struct {
}

func (*UnimplementedStreamServiceServer) AddEvents(ctx context.Context, req *AddEventsRequest) (*AddEventsResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method AddEvents not implemented")
}
func (*UnimplementedStreamServiceServer) GetEvents(ctx context.Context, req *GetEventsRequest) (*GetEventsResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetEvents not implemented")
}
func (*UnimplementedStreamServiceServer) LogEvents(ctx context.Context, req *LogEventsRequest) (*LogEventsResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method LogEvents not implemented")
}
func (*UnimplementedStreamServiceServer) StreamCount(ctx context.Context, req *StreamCountRequest) (*StreamCountResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method StreamCount not implemented")
}
func (*UnimplementedStreamServiceServer) EventCount(ctx context.Context, req *EventCountRequest) (*EventCountResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method EventCount not implemented")
}
func (*UnimplementedStreamServiceServer) StreamCountEstimate(ctx context.Context, req *StreamCountEstimateRequest) (*StreamCountEstimateResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method StreamCountEstimate not implemented")
}
func (*UnimplementedStreamServiceServer) EventCountEstimate(ctx context.Context, req *EventCountEstimateRequest) (*EventCountEstimateResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method EventCountEstimate not implemented")
}

func RegisterStreamServiceServer(s *grpc.Server, srv StreamServiceServer) {
	s.RegisterService(&_StreamService_serviceDesc, srv)
}

func _StreamService_AddEvents_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(AddEventsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(StreamServiceServer).AddEvents(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/api.StreamService/AddEvents",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(StreamServiceServer).AddEvents(ctx, req.(*AddEventsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _StreamService_GetEvents_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetEventsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(StreamServiceServer).GetEvents(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/api.StreamService/GetEvents",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(StreamServiceServer).GetEvents(ctx, req.(*GetEventsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _StreamService_LogEvents_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(LogEventsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(StreamServiceServer).LogEvents(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/api.StreamService/LogEvents",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(StreamServiceServer).LogEvents(ctx, req.(*LogEventsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _StreamService_StreamCount_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(StreamCountRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(StreamServiceServer).StreamCount(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/api.StreamService/StreamCount",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(StreamServiceServer).StreamCount(ctx, req.(*StreamCountRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _StreamService_EventCount_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(EventCountRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(StreamServiceServer).EventCount(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/api.StreamService/EventCount",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(StreamServiceServer).EventCount(ctx, req.(*EventCountRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _StreamService_StreamCountEstimate_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(StreamCountEstimateRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(StreamServiceServer).StreamCountEstimate(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/api.StreamService/StreamCountEstimate",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(StreamServiceServer).StreamCountEstimate(ctx, req.(*StreamCountEstimateRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _StreamService_EventCountEstimate_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(EventCountEstimateRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(StreamServiceServer).EventCountEstimate(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/api.StreamService/EventCountEstimate",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(StreamServiceServer).EventCountEstimate(ctx, req.(*EventCountEstimateRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _StreamService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "api.StreamService",
	HandlerType: (*StreamServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "AddEvents",
			Handler:    _StreamService_AddEvents_Handler,
		},
		{
			MethodName: "GetEvents",
			Handler:    _StreamService_GetEvents_Handler,
		},
		{
			MethodName: "LogEvents",
			Handler:    _StreamService_LogEvents_Handler,
		},
		{
			MethodName: "StreamCount",
			Handler:    _StreamService_StreamCount_Handler,
		},
		{
			MethodName: "EventCount",
			Handler:    _StreamService_EventCount_Handler,
		},
		{
			MethodName: "StreamCountEstimate",
			Handler:    _StreamService_StreamCountEstimate_Handler,
		},
		{
			MethodName: "EventCountEstimate",
			Handler:    _StreamService_EventCountEstimate_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "api.proto",
}

// ShellServiceClient is the client API for ShellService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type ShellServiceClient interface {
	Execute(ctx context.Context, opts ...grpc.CallOption) (ShellService_ExecuteClient, error)
}

type shellServiceClient struct {
	cc *grpc.ClientConn
}

func NewShellServiceClient(cc *grpc.ClientConn) ShellServiceClient {
	return &shellServiceClient{cc}
}

func (c *shellServiceClient) Execute(ctx context.Context, opts ...grpc.CallOption) (ShellService_ExecuteClient, error) {
	stream, err := c.cc.NewStream(ctx, &_ShellService_serviceDesc.Streams[0], "/api.ShellService/Execute", opts...)
	if err != nil {
		return nil, err
	}
	x := &shellServiceExecuteClient{stream}
	return x, nil
}

type ShellService_ExecuteClient interface {
	Send(*ShellRequest) error
	Recv() (*ShellResponse, error)
	grpc.ClientStream
}

type shellServiceExecuteClient struct {
	grpc.ClientStream
}

func (x *shellServiceExecuteClient) Send(m *ShellRequest) error {
	return x.ClientStream.SendMsg(m)
}

func (x *shellServiceExecuteClient) Recv() (*ShellResponse, error) {
	m := new(ShellResponse)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

// ShellServiceServer is the server API for ShellService service.
type ShellServiceServer interface {
	Execute(ShellService_ExecuteServer) error
}

// UnimplementedShellServiceServer can be embedded to have forward compatible implementations.
type UnimplementedShellServiceServer struct {
}

func (*UnimplementedShellServiceServer) Execute(srv ShellService_ExecuteServer) error {
	return status.Errorf(codes.Unimplemented, "method Execute not implemented")
}

func RegisterShellServiceServer(s *grpc.Server, srv ShellServiceServer) {
	s.RegisterService(&_ShellService_serviceDesc, srv)
}

func _ShellService_Execute_Handler(srv interface{}, stream grpc.ServerStream) error {
	return srv.(ShellServiceServer).Execute(&shellServiceExecuteServer{stream})
}

type ShellService_ExecuteServer interface {
	Send(*ShellResponse) error
	Recv() (*ShellRequest, error)
	grpc.ServerStream
}

type shellServiceExecuteServer struct {
	grpc.ServerStream
}

func (x *shellServiceExecuteServer) Send(m *ShellResponse) error {
	return x.ServerStream.SendMsg(m)
}

func (x *shellServiceExecuteServer) Recv() (*ShellRequest, error) {
	m := new(ShellRequest)
	if err := x.ServerStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

var _ShellService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "api.ShellService",
	HandlerType: (*ShellServiceServer)(nil),
	Methods:     []grpc.MethodDesc{},
	Streams: []grpc.StreamDesc{
		{
			StreamName:    "Execute",
			Handler:       _ShellService_Execute_Handler,
			ServerStreams: true,
			ClientStreams: true,
		},
	},
	Metadata: "api.proto",
}
