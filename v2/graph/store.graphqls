type RecordedEvent {
  id: String!
  stream: String!
  version: Int!
  data: String!
  metadata: String!
  causation_id: String!
  correlation_id: String!
  added_at: Time!
}

scalar Time

input GetInput {
  stream: String!
  version: Int! = 0
  limit: Int! = 0
}

input LogInput {
  offset: String!
  limit: Int! = 10
}

input StreamsInput {
  skip: Int! = 0
  limit: Int! = 25
}

type Stream {
  id: String!
}

extend type Query {
  streamCount: Int!
  get(input: GetInput! = {}): [RecordedEvent!]!
  log(input: LogInput! = {}): [RecordedEvent!]!
  streams(input: StreamsInput! = {}): [Stream!]!
}
