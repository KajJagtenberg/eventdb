// Code generated by protoc-gen-go. DO NOT EDIT.
// source: store.proto

package store

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type RecordedEvent struct {
	Id                   []byte   `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Stream               []byte   `protobuf:"bytes,2,opt,name=stream,proto3" json:"stream,omitempty"`
	Version              uint32   `protobuf:"varint,3,opt,name=version,proto3" json:"version,omitempty"`
	Type                 string   `protobuf:"bytes,4,opt,name=type,proto3" json:"type,omitempty"`
	Data                 []byte   `protobuf:"bytes,5,opt,name=data,proto3" json:"data,omitempty"`
	Metadata             []byte   `protobuf:"bytes,6,opt,name=metadata,proto3" json:"metadata,omitempty"`
	CausationId          []byte   `protobuf:"bytes,7,opt,name=causation_id,json=causationId,proto3" json:"causation_id,omitempty"`
	CorrelationId        []byte   `protobuf:"bytes,8,opt,name=correlation_id,json=correlationId,proto3" json:"correlation_id,omitempty"`
	AddedAt              int64    `protobuf:"varint,9,opt,name=added_at,json=addedAt,proto3" json:"added_at,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RecordedEvent) Reset()         { *m = RecordedEvent{} }
func (m *RecordedEvent) String() string { return proto.CompactTextString(m) }
func (*RecordedEvent) ProtoMessage()    {}
func (*RecordedEvent) Descriptor() ([]byte, []int) {
	return fileDescriptor_98bbca36ef968dfc, []int{0}
}

func (m *RecordedEvent) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RecordedEvent.Unmarshal(m, b)
}
func (m *RecordedEvent) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RecordedEvent.Marshal(b, m, deterministic)
}
func (m *RecordedEvent) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RecordedEvent.Merge(m, src)
}
func (m *RecordedEvent) XXX_Size() int {
	return xxx_messageInfo_RecordedEvent.Size(m)
}
func (m *RecordedEvent) XXX_DiscardUnknown() {
	xxx_messageInfo_RecordedEvent.DiscardUnknown(m)
}

var xxx_messageInfo_RecordedEvent proto.InternalMessageInfo

func (m *RecordedEvent) GetId() []byte {
	if m != nil {
		return m.Id
	}
	return nil
}

func (m *RecordedEvent) GetStream() []byte {
	if m != nil {
		return m.Stream
	}
	return nil
}

func (m *RecordedEvent) GetVersion() uint32 {
	if m != nil {
		return m.Version
	}
	return 0
}

func (m *RecordedEvent) GetType() string {
	if m != nil {
		return m.Type
	}
	return ""
}

func (m *RecordedEvent) GetData() []byte {
	if m != nil {
		return m.Data
	}
	return nil
}

func (m *RecordedEvent) GetMetadata() []byte {
	if m != nil {
		return m.Metadata
	}
	return nil
}

func (m *RecordedEvent) GetCausationId() []byte {
	if m != nil {
		return m.CausationId
	}
	return nil
}

func (m *RecordedEvent) GetCorrelationId() []byte {
	if m != nil {
		return m.CorrelationId
	}
	return nil
}

func (m *RecordedEvent) GetAddedAt() int64 {
	if m != nil {
		return m.AddedAt
	}
	return 0
}

type RecordedStream struct {
	Id                   []byte   `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Events               [][]byte `protobuf:"bytes,2,rep,name=events,proto3" json:"events,omitempty"`
	AddedAt              int64    `protobuf:"varint,3,opt,name=added_at,json=addedAt,proto3" json:"added_at,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RecordedStream) Reset()         { *m = RecordedStream{} }
func (m *RecordedStream) String() string { return proto.CompactTextString(m) }
func (*RecordedStream) ProtoMessage()    {}
func (*RecordedStream) Descriptor() ([]byte, []int) {
	return fileDescriptor_98bbca36ef968dfc, []int{1}
}

func (m *RecordedStream) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RecordedStream.Unmarshal(m, b)
}
func (m *RecordedStream) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RecordedStream.Marshal(b, m, deterministic)
}
func (m *RecordedStream) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RecordedStream.Merge(m, src)
}
func (m *RecordedStream) XXX_Size() int {
	return xxx_messageInfo_RecordedStream.Size(m)
}
func (m *RecordedStream) XXX_DiscardUnknown() {
	xxx_messageInfo_RecordedStream.DiscardUnknown(m)
}

var xxx_messageInfo_RecordedStream proto.InternalMessageInfo

func (m *RecordedStream) GetId() []byte {
	if m != nil {
		return m.Id
	}
	return nil
}

func (m *RecordedStream) GetEvents() [][]byte {
	if m != nil {
		return m.Events
	}
	return nil
}

func (m *RecordedStream) GetAddedAt() int64 {
	if m != nil {
		return m.AddedAt
	}
	return 0
}

type AddRequest struct {
	Stream               []byte              `protobuf:"bytes,1,opt,name=stream,proto3" json:"stream,omitempty"`
	Version              uint32              `protobuf:"varint,2,opt,name=version,proto3" json:"version,omitempty"`
	Events               []*AddRequest_Event `protobuf:"bytes,3,rep,name=events,proto3" json:"events,omitempty"`
	XXX_NoUnkeyedLiteral struct{}            `json:"-"`
	XXX_unrecognized     []byte              `json:"-"`
	XXX_sizecache        int32               `json:"-"`
}

func (m *AddRequest) Reset()         { *m = AddRequest{} }
func (m *AddRequest) String() string { return proto.CompactTextString(m) }
func (*AddRequest) ProtoMessage()    {}
func (*AddRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_98bbca36ef968dfc, []int{2}
}

func (m *AddRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AddRequest.Unmarshal(m, b)
}
func (m *AddRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AddRequest.Marshal(b, m, deterministic)
}
func (m *AddRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AddRequest.Merge(m, src)
}
func (m *AddRequest) XXX_Size() int {
	return xxx_messageInfo_AddRequest.Size(m)
}
func (m *AddRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_AddRequest.DiscardUnknown(m)
}

var xxx_messageInfo_AddRequest proto.InternalMessageInfo

func (m *AddRequest) GetStream() []byte {
	if m != nil {
		return m.Stream
	}
	return nil
}

func (m *AddRequest) GetVersion() uint32 {
	if m != nil {
		return m.Version
	}
	return 0
}

func (m *AddRequest) GetEvents() []*AddRequest_Event {
	if m != nil {
		return m.Events
	}
	return nil
}

type AddRequest_Event struct {
	Type                 string   `protobuf:"bytes,1,opt,name=type,proto3" json:"type,omitempty"`
	Data                 []byte   `protobuf:"bytes,2,opt,name=data,proto3" json:"data,omitempty"`
	Metadata             []byte   `protobuf:"bytes,3,opt,name=metadata,proto3" json:"metadata,omitempty"`
	CausationId          []byte   `protobuf:"bytes,4,opt,name=causation_id,json=causationId,proto3" json:"causation_id,omitempty"`
	CorrelationId        []byte   `protobuf:"bytes,5,opt,name=correlation_id,json=correlationId,proto3" json:"correlation_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *AddRequest_Event) Reset()         { *m = AddRequest_Event{} }
func (m *AddRequest_Event) String() string { return proto.CompactTextString(m) }
func (*AddRequest_Event) ProtoMessage()    {}
func (*AddRequest_Event) Descriptor() ([]byte, []int) {
	return fileDescriptor_98bbca36ef968dfc, []int{2, 0}
}

func (m *AddRequest_Event) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AddRequest_Event.Unmarshal(m, b)
}
func (m *AddRequest_Event) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AddRequest_Event.Marshal(b, m, deterministic)
}
func (m *AddRequest_Event) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AddRequest_Event.Merge(m, src)
}
func (m *AddRequest_Event) XXX_Size() int {
	return xxx_messageInfo_AddRequest_Event.Size(m)
}
func (m *AddRequest_Event) XXX_DiscardUnknown() {
	xxx_messageInfo_AddRequest_Event.DiscardUnknown(m)
}

var xxx_messageInfo_AddRequest_Event proto.InternalMessageInfo

func (m *AddRequest_Event) GetType() string {
	if m != nil {
		return m.Type
	}
	return ""
}

func (m *AddRequest_Event) GetData() []byte {
	if m != nil {
		return m.Data
	}
	return nil
}

func (m *AddRequest_Event) GetMetadata() []byte {
	if m != nil {
		return m.Metadata
	}
	return nil
}

func (m *AddRequest_Event) GetCausationId() []byte {
	if m != nil {
		return m.CausationId
	}
	return nil
}

func (m *AddRequest_Event) GetCorrelationId() []byte {
	if m != nil {
		return m.CorrelationId
	}
	return nil
}

type GetRequest struct {
	Stream               []byte   `protobuf:"bytes,1,opt,name=stream,proto3" json:"stream,omitempty"`
	Version              uint32   `protobuf:"varint,2,opt,name=version,proto3" json:"version,omitempty"`
	Limit                uint32   `protobuf:"varint,3,opt,name=limit,proto3" json:"limit,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetRequest) Reset()         { *m = GetRequest{} }
func (m *GetRequest) String() string { return proto.CompactTextString(m) }
func (*GetRequest) ProtoMessage()    {}
func (*GetRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_98bbca36ef968dfc, []int{3}
}

func (m *GetRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetRequest.Unmarshal(m, b)
}
func (m *GetRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetRequest.Marshal(b, m, deterministic)
}
func (m *GetRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetRequest.Merge(m, src)
}
func (m *GetRequest) XXX_Size() int {
	return xxx_messageInfo_GetRequest.Size(m)
}
func (m *GetRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetRequest proto.InternalMessageInfo

func (m *GetRequest) GetStream() []byte {
	if m != nil {
		return m.Stream
	}
	return nil
}

func (m *GetRequest) GetVersion() uint32 {
	if m != nil {
		return m.Version
	}
	return 0
}

func (m *GetRequest) GetLimit() uint32 {
	if m != nil {
		return m.Limit
	}
	return 0
}

type LogRequest struct {
	Offset               []byte   `protobuf:"bytes,1,opt,name=offset,proto3" json:"offset,omitempty"`
	Limit                uint32   `protobuf:"varint,2,opt,name=limit,proto3" json:"limit,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *LogRequest) Reset()         { *m = LogRequest{} }
func (m *LogRequest) String() string { return proto.CompactTextString(m) }
func (*LogRequest) ProtoMessage()    {}
func (*LogRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_98bbca36ef968dfc, []int{4}
}

func (m *LogRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_LogRequest.Unmarshal(m, b)
}
func (m *LogRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_LogRequest.Marshal(b, m, deterministic)
}
func (m *LogRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_LogRequest.Merge(m, src)
}
func (m *LogRequest) XXX_Size() int {
	return xxx_messageInfo_LogRequest.Size(m)
}
func (m *LogRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_LogRequest.DiscardUnknown(m)
}

var xxx_messageInfo_LogRequest proto.InternalMessageInfo

func (m *LogRequest) GetOffset() []byte {
	if m != nil {
		return m.Offset
	}
	return nil
}

func (m *LogRequest) GetLimit() uint32 {
	if m != nil {
		return m.Limit
	}
	return 0
}

type StreamCountRequest struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *StreamCountRequest) Reset()         { *m = StreamCountRequest{} }
func (m *StreamCountRequest) String() string { return proto.CompactTextString(m) }
func (*StreamCountRequest) ProtoMessage()    {}
func (*StreamCountRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_98bbca36ef968dfc, []int{5}
}

func (m *StreamCountRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_StreamCountRequest.Unmarshal(m, b)
}
func (m *StreamCountRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_StreamCountRequest.Marshal(b, m, deterministic)
}
func (m *StreamCountRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_StreamCountRequest.Merge(m, src)
}
func (m *StreamCountRequest) XXX_Size() int {
	return xxx_messageInfo_StreamCountRequest.Size(m)
}
func (m *StreamCountRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_StreamCountRequest.DiscardUnknown(m)
}

var xxx_messageInfo_StreamCountRequest proto.InternalMessageInfo

type StreamCountResponse struct {
	Count                uint64   `protobuf:"varint,1,opt,name=count,proto3" json:"count,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *StreamCountResponse) Reset()         { *m = StreamCountResponse{} }
func (m *StreamCountResponse) String() string { return proto.CompactTextString(m) }
func (*StreamCountResponse) ProtoMessage()    {}
func (*StreamCountResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_98bbca36ef968dfc, []int{6}
}

func (m *StreamCountResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_StreamCountResponse.Unmarshal(m, b)
}
func (m *StreamCountResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_StreamCountResponse.Marshal(b, m, deterministic)
}
func (m *StreamCountResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_StreamCountResponse.Merge(m, src)
}
func (m *StreamCountResponse) XXX_Size() int {
	return xxx_messageInfo_StreamCountResponse.Size(m)
}
func (m *StreamCountResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_StreamCountResponse.DiscardUnknown(m)
}

var xxx_messageInfo_StreamCountResponse proto.InternalMessageInfo

func (m *StreamCountResponse) GetCount() uint64 {
	if m != nil {
		return m.Count
	}
	return 0
}

type GetStreamsRequest struct {
	Skip                 uint32   `protobuf:"varint,1,opt,name=skip,proto3" json:"skip,omitempty"`
	Limit                uint32   `protobuf:"varint,2,opt,name=limit,proto3" json:"limit,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetStreamsRequest) Reset()         { *m = GetStreamsRequest{} }
func (m *GetStreamsRequest) String() string { return proto.CompactTextString(m) }
func (*GetStreamsRequest) ProtoMessage()    {}
func (*GetStreamsRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_98bbca36ef968dfc, []int{7}
}

func (m *GetStreamsRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetStreamsRequest.Unmarshal(m, b)
}
func (m *GetStreamsRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetStreamsRequest.Marshal(b, m, deterministic)
}
func (m *GetStreamsRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetStreamsRequest.Merge(m, src)
}
func (m *GetStreamsRequest) XXX_Size() int {
	return xxx_messageInfo_GetStreamsRequest.Size(m)
}
func (m *GetStreamsRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetStreamsRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetStreamsRequest proto.InternalMessageInfo

func (m *GetStreamsRequest) GetSkip() uint32 {
	if m != nil {
		return m.Skip
	}
	return 0
}

func (m *GetStreamsRequest) GetLimit() uint32 {
	if m != nil {
		return m.Limit
	}
	return 0
}

type Stream struct {
	Id                   []byte   `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Stream) Reset()         { *m = Stream{} }
func (m *Stream) String() string { return proto.CompactTextString(m) }
func (*Stream) ProtoMessage()    {}
func (*Stream) Descriptor() ([]byte, []int) {
	return fileDescriptor_98bbca36ef968dfc, []int{8}
}

func (m *Stream) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Stream.Unmarshal(m, b)
}
func (m *Stream) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Stream.Marshal(b, m, deterministic)
}
func (m *Stream) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Stream.Merge(m, src)
}
func (m *Stream) XXX_Size() int {
	return xxx_messageInfo_Stream.Size(m)
}
func (m *Stream) XXX_DiscardUnknown() {
	xxx_messageInfo_Stream.DiscardUnknown(m)
}

var xxx_messageInfo_Stream proto.InternalMessageInfo

func (m *Stream) GetId() []byte {
	if m != nil {
		return m.Id
	}
	return nil
}

func init() {
	proto.RegisterType((*RecordedEvent)(nil), "store.RecordedEvent")
	proto.RegisterType((*RecordedStream)(nil), "store.RecordedStream")
	proto.RegisterType((*AddRequest)(nil), "store.AddRequest")
	proto.RegisterType((*AddRequest_Event)(nil), "store.AddRequest.Event")
	proto.RegisterType((*GetRequest)(nil), "store.GetRequest")
	proto.RegisterType((*LogRequest)(nil), "store.LogRequest")
	proto.RegisterType((*StreamCountRequest)(nil), "store.StreamCountRequest")
	proto.RegisterType((*StreamCountResponse)(nil), "store.StreamCountResponse")
	proto.RegisterType((*GetStreamsRequest)(nil), "store.GetStreamsRequest")
	proto.RegisterType((*Stream)(nil), "store.Stream")
}

func init() { proto.RegisterFile("store.proto", fileDescriptor_98bbca36ef968dfc) }

var fileDescriptor_98bbca36ef968dfc = []byte{
	// 503 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x9c, 0x94, 0xcf, 0x6e, 0xd3, 0x40,
	0x10, 0xc6, 0xbb, 0x6b, 0x3b, 0x69, 0x27, 0x75, 0xa4, 0x2e, 0x11, 0x6c, 0x7d, 0x32, 0x96, 0x90,
	0x2c, 0x21, 0x05, 0x14, 0x4e, 0x20, 0x71, 0x08, 0x08, 0xa2, 0x4a, 0x3d, 0x39, 0x9c, 0xb8, 0x54,
	0x26, 0x3b, 0xad, 0x2c, 0x1a, 0x6f, 0xf0, 0x6e, 0x2a, 0xf1, 0x04, 0x3c, 0x01, 0x4f, 0xc1, 0x1b,
	0x72, 0x42, 0xde, 0xf5, 0x5f, 0xd5, 0x29, 0x88, 0x9b, 0xbf, 0xcf, 0x33, 0x5f, 0x66, 0x7f, 0xb3,
	0x31, 0x4c, 0x94, 0x96, 0x05, 0xce, 0x77, 0x85, 0xd4, 0x92, 0x79, 0x46, 0x44, 0xbf, 0x09, 0xf8,
	0x09, 0x6e, 0x64, 0x21, 0x50, 0x7c, 0xb8, 0xc3, 0x5c, 0xb3, 0x29, 0xd0, 0x4c, 0x70, 0x12, 0x92,
	0xf8, 0x34, 0xa1, 0x99, 0x60, 0x8f, 0x61, 0xa4, 0x74, 0x81, 0xe9, 0x96, 0x53, 0xe3, 0x55, 0x8a,
	0x71, 0x18, 0xdf, 0x61, 0xa1, 0x32, 0x99, 0x73, 0x27, 0x24, 0xb1, 0x9f, 0xd4, 0x92, 0x31, 0x70,
	0xf5, 0xf7, 0x1d, 0x72, 0x37, 0x24, 0xf1, 0x49, 0x62, 0x9e, 0x4b, 0x4f, 0xa4, 0x3a, 0xe5, 0x9e,
	0xc9, 0x30, 0xcf, 0x2c, 0x80, 0xe3, 0x2d, 0xea, 0xd4, 0xf8, 0x23, 0xe3, 0x37, 0x9a, 0x3d, 0x85,
	0xd3, 0x4d, 0xba, 0x57, 0xa9, 0xce, 0x64, 0x7e, 0x95, 0x09, 0x3e, 0x36, 0xef, 0x27, 0x8d, 0x77,
	0x21, 0xd8, 0x33, 0x98, 0x6e, 0x64, 0x51, 0xe0, 0x6d, 0x53, 0x74, 0x6c, 0x8a, 0xfc, 0x8e, 0x7b,
	0x21, 0xd8, 0x39, 0x1c, 0xa7, 0x42, 0xa0, 0xb8, 0x4a, 0x35, 0x3f, 0x09, 0x49, 0xec, 0x24, 0x63,
	0xa3, 0x97, 0x3a, 0x5a, 0xc3, 0xb4, 0x3e, 0xfb, 0xda, 0x1e, 0x6a, 0xe0, 0xf0, 0x58, 0x52, 0x51,
	0x9c, 0x86, 0x4e, 0x79, 0x78, 0xab, 0x7a, 0xa1, 0x4e, 0x3f, 0xf4, 0x07, 0x05, 0x58, 0x0a, 0x91,
	0xe0, 0xb7, 0x3d, 0x2a, 0xdd, 0xc1, 0x47, 0x0e, 0xe1, 0xa3, 0x7d, 0x7c, 0x2f, 0x9a, 0xdf, 0x74,
	0x42, 0x27, 0x9e, 0x2c, 0x9e, 0xcc, 0xed, 0xde, 0xda, 0xd0, 0xb9, 0xd9, 0x54, 0x3d, 0x4c, 0xf0,
	0x93, 0x80, 0x67, 0x77, 0x57, 0x93, 0x27, 0x03, 0xe4, 0xe9, 0x01, 0xf2, 0xce, 0x5f, 0xc8, 0xbb,
	0xff, 0x42, 0xde, 0x1b, 0x20, 0x1f, 0x7d, 0x02, 0x58, 0xa1, 0xfe, 0x7f, 0x10, 0x33, 0xf0, 0x6e,
	0xb3, 0x6d, 0xa6, 0xab, 0xfb, 0x65, 0x45, 0xf4, 0x06, 0xe0, 0x52, 0xde, 0x74, 0x52, 0xe5, 0xf5,
	0xb5, 0x42, 0x5d, 0xa7, 0x5a, 0xd5, 0xf6, 0xd2, 0x6e, 0xef, 0x0c, 0x98, 0x5d, 0xf4, 0x7b, 0xb9,
	0xcf, 0xeb, 0xc9, 0xa2, 0xe7, 0xf0, 0xa8, 0xe7, 0xaa, 0x9d, 0xcc, 0x15, 0x96, 0x11, 0x9b, 0xd2,
	0x30, 0xc9, 0x6e, 0x62, 0x45, 0xf4, 0x16, 0xce, 0x56, 0xa8, 0x6d, 0xbd, 0xaa, 0xa7, 0x60, 0xe0,
	0xaa, 0xaf, 0xd9, 0xce, 0x54, 0xfa, 0x89, 0x79, 0x3e, 0x30, 0x01, 0x87, 0xd1, 0xf0, 0x55, 0x5b,
	0xfc, 0xa2, 0x00, 0x66, 0x8b, 0xeb, 0x72, 0xdb, 0x6c, 0x01, 0xce, 0x52, 0x08, 0x76, 0x76, 0x6f,
	0xf9, 0xc1, 0xac, 0xb2, 0x7a, 0x7f, 0xdb, 0xe8, 0xe8, 0x25, 0x29, 0x7b, 0x56, 0xa8, 0x9b, 0x9e,
	0x16, 0xfe, 0xc3, 0x3d, 0x97, 0xf2, 0xa6, 0xe9, 0x69, 0xd1, 0x3e, 0xd0, 0xf3, 0x11, 0x26, 0x1d,
	0x60, 0xec, 0xbc, 0x2a, 0xbc, 0x8f, 0x36, 0x08, 0x86, 0x5e, 0x59, 0xbe, 0xd1, 0x11, 0x7b, 0x6d,
	0x2e, 0x48, 0xc5, 0x92, 0xf1, 0x76, 0xec, 0x3e, 0xde, 0xc0, 0xef, 0xa5, 0x94, 0x23, 0xbc, 0x1b,
	0x7f, 0xb6, 0x1f, 0xb0, 0x2f, 0x23, 0xf3, 0x39, 0x7b, 0xf5, 0x27, 0x00, 0x00, 0xff, 0xff, 0x74,
	0x6f, 0x1e, 0xd0, 0xdd, 0x04, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// EventStoreClient is the client API for EventStore service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type EventStoreClient interface {
	Add(ctx context.Context, in *AddRequest, opts ...grpc.CallOption) (EventStore_AddClient, error)
	Get(ctx context.Context, in *GetRequest, opts ...grpc.CallOption) (EventStore_GetClient, error)
	Log(ctx context.Context, in *LogRequest, opts ...grpc.CallOption) (EventStore_LogClient, error)
	StreamCount(ctx context.Context, in *StreamCountRequest, opts ...grpc.CallOption) (*StreamCountResponse, error)
	GetStreams(ctx context.Context, in *GetStreamsRequest, opts ...grpc.CallOption) (EventStore_GetStreamsClient, error)
}

type eventStoreClient struct {
	cc *grpc.ClientConn
}

func NewEventStoreClient(cc *grpc.ClientConn) EventStoreClient {
	return &eventStoreClient{cc}
}

func (c *eventStoreClient) Add(ctx context.Context, in *AddRequest, opts ...grpc.CallOption) (EventStore_AddClient, error) {
	stream, err := c.cc.NewStream(ctx, &_EventStore_serviceDesc.Streams[0], "/store.EventStore/Add", opts...)
	if err != nil {
		return nil, err
	}
	x := &eventStoreAddClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type EventStore_AddClient interface {
	Recv() (*RecordedEvent, error)
	grpc.ClientStream
}

type eventStoreAddClient struct {
	grpc.ClientStream
}

func (x *eventStoreAddClient) Recv() (*RecordedEvent, error) {
	m := new(RecordedEvent)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func (c *eventStoreClient) Get(ctx context.Context, in *GetRequest, opts ...grpc.CallOption) (EventStore_GetClient, error) {
	stream, err := c.cc.NewStream(ctx, &_EventStore_serviceDesc.Streams[1], "/store.EventStore/Get", opts...)
	if err != nil {
		return nil, err
	}
	x := &eventStoreGetClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type EventStore_GetClient interface {
	Recv() (*RecordedEvent, error)
	grpc.ClientStream
}

type eventStoreGetClient struct {
	grpc.ClientStream
}

func (x *eventStoreGetClient) Recv() (*RecordedEvent, error) {
	m := new(RecordedEvent)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func (c *eventStoreClient) Log(ctx context.Context, in *LogRequest, opts ...grpc.CallOption) (EventStore_LogClient, error) {
	stream, err := c.cc.NewStream(ctx, &_EventStore_serviceDesc.Streams[2], "/store.EventStore/Log", opts...)
	if err != nil {
		return nil, err
	}
	x := &eventStoreLogClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type EventStore_LogClient interface {
	Recv() (*RecordedEvent, error)
	grpc.ClientStream
}

type eventStoreLogClient struct {
	grpc.ClientStream
}

func (x *eventStoreLogClient) Recv() (*RecordedEvent, error) {
	m := new(RecordedEvent)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func (c *eventStoreClient) StreamCount(ctx context.Context, in *StreamCountRequest, opts ...grpc.CallOption) (*StreamCountResponse, error) {
	out := new(StreamCountResponse)
	err := c.cc.Invoke(ctx, "/store.EventStore/StreamCount", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *eventStoreClient) GetStreams(ctx context.Context, in *GetStreamsRequest, opts ...grpc.CallOption) (EventStore_GetStreamsClient, error) {
	stream, err := c.cc.NewStream(ctx, &_EventStore_serviceDesc.Streams[3], "/store.EventStore/GetStreams", opts...)
	if err != nil {
		return nil, err
	}
	x := &eventStoreGetStreamsClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type EventStore_GetStreamsClient interface {
	Recv() (*Stream, error)
	grpc.ClientStream
}

type eventStoreGetStreamsClient struct {
	grpc.ClientStream
}

func (x *eventStoreGetStreamsClient) Recv() (*Stream, error) {
	m := new(Stream)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

// EventStoreServer is the server API for EventStore service.
type EventStoreServer interface {
	Add(*AddRequest, EventStore_AddServer) error
	Get(*GetRequest, EventStore_GetServer) error
	Log(*LogRequest, EventStore_LogServer) error
	StreamCount(context.Context, *StreamCountRequest) (*StreamCountResponse, error)
	GetStreams(*GetStreamsRequest, EventStore_GetStreamsServer) error
}

// UnimplementedEventStoreServer can be embedded to have forward compatible implementations.
type UnimplementedEventStoreServer struct {
}

func (*UnimplementedEventStoreServer) Add(req *AddRequest, srv EventStore_AddServer) error {
	return status.Errorf(codes.Unimplemented, "method Add not implemented")
}
func (*UnimplementedEventStoreServer) Get(req *GetRequest, srv EventStore_GetServer) error {
	return status.Errorf(codes.Unimplemented, "method Get not implemented")
}
func (*UnimplementedEventStoreServer) Log(req *LogRequest, srv EventStore_LogServer) error {
	return status.Errorf(codes.Unimplemented, "method Log not implemented")
}
func (*UnimplementedEventStoreServer) StreamCount(ctx context.Context, req *StreamCountRequest) (*StreamCountResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method StreamCount not implemented")
}
func (*UnimplementedEventStoreServer) GetStreams(req *GetStreamsRequest, srv EventStore_GetStreamsServer) error {
	return status.Errorf(codes.Unimplemented, "method GetStreams not implemented")
}

func RegisterEventStoreServer(s *grpc.Server, srv EventStoreServer) {
	s.RegisterService(&_EventStore_serviceDesc, srv)
}

func _EventStore_Add_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(AddRequest)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(EventStoreServer).Add(m, &eventStoreAddServer{stream})
}

type EventStore_AddServer interface {
	Send(*RecordedEvent) error
	grpc.ServerStream
}

type eventStoreAddServer struct {
	grpc.ServerStream
}

func (x *eventStoreAddServer) Send(m *RecordedEvent) error {
	return x.ServerStream.SendMsg(m)
}

func _EventStore_Get_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(GetRequest)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(EventStoreServer).Get(m, &eventStoreGetServer{stream})
}

type EventStore_GetServer interface {
	Send(*RecordedEvent) error
	grpc.ServerStream
}

type eventStoreGetServer struct {
	grpc.ServerStream
}

func (x *eventStoreGetServer) Send(m *RecordedEvent) error {
	return x.ServerStream.SendMsg(m)
}

func _EventStore_Log_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(LogRequest)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(EventStoreServer).Log(m, &eventStoreLogServer{stream})
}

type EventStore_LogServer interface {
	Send(*RecordedEvent) error
	grpc.ServerStream
}

type eventStoreLogServer struct {
	grpc.ServerStream
}

func (x *eventStoreLogServer) Send(m *RecordedEvent) error {
	return x.ServerStream.SendMsg(m)
}

func _EventStore_StreamCount_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(StreamCountRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(EventStoreServer).StreamCount(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/store.EventStore/StreamCount",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(EventStoreServer).StreamCount(ctx, req.(*StreamCountRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _EventStore_GetStreams_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(GetStreamsRequest)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(EventStoreServer).GetStreams(m, &eventStoreGetStreamsServer{stream})
}

type EventStore_GetStreamsServer interface {
	Send(*Stream) error
	grpc.ServerStream
}

type eventStoreGetStreamsServer struct {
	grpc.ServerStream
}

func (x *eventStoreGetStreamsServer) Send(m *Stream) error {
	return x.ServerStream.SendMsg(m)
}

var _EventStore_serviceDesc = grpc.ServiceDesc{
	ServiceName: "store.EventStore",
	HandlerType: (*EventStoreServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "StreamCount",
			Handler:    _EventStore_StreamCount_Handler,
		},
	},
	Streams: []grpc.StreamDesc{
		{
			StreamName:    "Add",
			Handler:       _EventStore_Add_Handler,
			ServerStreams: true,
		},
		{
			StreamName:    "Get",
			Handler:       _EventStore_Get_Handler,
			ServerStreams: true,
		},
		{
			StreamName:    "Log",
			Handler:       _EventStore_Log_Handler,
			ServerStreams: true,
		},
		{
			StreamName:    "GetStreams",
			Handler:       _EventStore_GetStreams_Handler,
			ServerStreams: true,
		},
	},
	Metadata: "store.proto",
}
