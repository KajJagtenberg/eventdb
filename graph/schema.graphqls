type Event {
  id: String!
  stream: String!
  version: Int!
  type: String!
  data: String!
  metadata: String!
  addedAt: Time!
}

scalar Time

extend type Query {
  fromStream(stream: String, version: Int = 0, limit: Int = 0): [Event!]!
  fromAllStreams(offset: String, limit: Int = 0): [Event!]!
}

extend type Mutation {
  append: [Event]!
}